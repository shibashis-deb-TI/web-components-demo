{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction SiteComponent_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const heading_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(heading_r2);\n  }\n}\nfunction SiteComponent_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"input\", 1);\n    i0.ɵɵlistener(\"change\", function SiteComponent_tr_3_Template_input_change_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const data_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.handleCheckedRow(data_r3.id));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\");\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"td\");\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const data_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", data_r3.checked);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r3.siteId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r3.pod);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r3.lastRead);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r3.dc);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r3.address);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r3.city);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r3.state);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r3.meterType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r3.zip);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r3.cycle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r3.loadProfile);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r3.customer);\n  }\n}\nexport class SiteComponent {\n  constructor() {\n    this.toggleSelect = new EventEmitter();\n  }\n  ngOnInit() {\n    this.headers = Object.keys(this.tableData[0]).filter(key => key !== 'id').map(key => key.to);\n  }\n  handleCheckedRow(id) {\n    if (!id) {\n      return;\n    }\n    this.toggleSelect.emit(id);\n  }\n  static #_ = this.ɵfac = function SiteComponent_Factory(t) {\n    return new (t || SiteComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SiteComponent,\n    selectors: [[\"app-site\"]],\n    inputs: {\n      tableData: \"tableData\"\n    },\n    outputs: {\n      toggleSelect: \"toggleSelect\"\n    },\n    decls: 4,\n    vars: 2,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"]],\n    template: function SiteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\")(1, \"tr\");\n        i0.ɵɵtemplate(2, SiteComponent_th_2_Template, 2, 1, \"th\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, SiteComponent_tr_3_Template, 27, 13, \"tr\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.headers);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tableData);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","heading_r2","ɵɵlistener","SiteComponent_tr_3_Template_input_change_2_listener","restoredCtx","ɵɵrestoreView","_r5","data_r3","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","handleCheckedRow","id","ɵɵproperty","checked","siteId","pod","lastRead","dc","address","city","state","meterType","zip","cycle","loadProfile","customer","SiteComponent","constructor","toggleSelect","ngOnInit","headers","Object","keys","tableData","filter","key","map","to","emit","_","_2","selectors","inputs","outputs","decls","vars","consts","template","SiteComponent_Template","rf","ctx","ɵɵtemplate","SiteComponent_th_2_Template","SiteComponent_tr_3_Template"],"sources":["/home/technoidentity/Desktop/nrg/web-component-demo/mfe-app/src/app/sites/components/site/site.component.ts","/home/technoidentity/Desktop/nrg/web-component-demo/mfe-app/src/app/sites/components/site/site.component.html"],"sourcesContent":["import { Site } from '@/model';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-site',\n  templateUrl: './site.component.html',\n  styleUrls: ['./site.component.scss'],\n})\nexport class SiteComponent implements OnInit {\n  @Input({ required: true }) tableData!: ReadonlyArray<Site>;\n\n  @Output() toggleSelect = new EventEmitter<number>();\n\n  headers!: string[];\n\n  ngOnInit(): void {\n    this.headers = Object.keys(this.tableData[0]).filter(key => key !== 'id').map(key => key.to);\n  }\n\n  handleCheckedRow(id: number) {\n    if (!id) {\n      return;\n    }\n\n    this.toggleSelect.emit(id);\n  }\n}\n","<table>\n  <tr>\n    <th *ngFor=\"let heading of headers\">{{ heading }}</th>\n  </tr>\n\n  <tr *ngFor=\"let data of tableData\">\n    <td>\n      <input\n        type=\"checkbox\"\n        [checked]=\"data.checked\"\n        (change)=\"handleCheckedRow(data.id)\"\n      />\n    </td>\n    <td>{{ data.siteId }}</td>\n    <td>{{ data.pod }}</td>\n    <td>{{ data.lastRead }}</td>\n    <td>{{ data.dc }}</td>\n    <td>{{ data.address }}</td>\n    <td>{{ data.city }}</td>\n    <td>{{ data.state }}</td>\n    <td>{{ data.meterType }}</td>\n    <td>{{ data.zip }}</td>\n    <td>{{ data.cycle }}</td>\n    <td>{{ data.loadProfile }}</td>\n    <td>{{ data.customer }}</td>\n  </tr>\n</table>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}