{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nexport let SiteListComponent = class SiteListComponent {\n  constructor() {\n    this.show = false;\n    this.tableData = [{\n      id: 1,\n      checked: false,\n      siteId: 'Site 1',\n      pod: '12345_67890',\n      lastRead: '05/20/2024',\n      dc: 'CLP',\n      address: 'Address Line 1',\n      city: 'City 1',\n      state: 'State',\n      meterType: 'Meter Type',\n      zip: '12345',\n      cycle: 10,\n      loadProfile: 'Profile',\n      customer: 'Customer Name'\n    }, {\n      id: 2,\n      checked: false,\n      siteId: 'Site 1',\n      pod: '12345_67890',\n      lastRead: '05/20/2024',\n      dc: 'CLP',\n      address: 'Address Line 1',\n      city: 'City 1',\n      state: 'State',\n      meterType: 'Meter Type',\n      zip: '12345',\n      cycle: 10,\n      loadProfile: 'Profile',\n      customer: 'Customer Name'\n    }, {\n      id: 3,\n      checked: false,\n      siteId: 'Site 1',\n      pod: '12345_67890',\n      lastRead: '05/20/2024',\n      dc: 'CLP',\n      address: 'Address Line 1',\n      city: 'City 1',\n      state: 'State',\n      meterType: 'Meter Type',\n      zip: '12345',\n      cycle: 10,\n      loadProfile: 'Profile',\n      customer: 'Customer Name'\n    }];\n    this.headers = Object.keys(this.tableData[0]).filter(key => key !== 'id');\n  }\n  handleCheckedRow(id) {\n    const item = this.tableData.find(data => data.id === id);\n    if (!item) {\n      return;\n    }\n    this.tableData = [...this.tableData.filter(data => data.id !== id), {\n      ...item,\n      checked: !item.checked\n    }];\n  }\n};\n__decorate([Input({\n  required: true\n})], SiteListComponent.prototype, \"show\", void 0);\nSiteListComponent = __decorate([Component({\n  selector: 'app-site-list',\n  templateUrl: './site-list.component.html',\n  styleUrls: ['./site-list.component.scss']\n})], SiteListComponent);","map":{"version":3,"names":["Component","Input","SiteListComponent","constructor","show","tableData","id","checked","siteId","pod","lastRead","dc","address","city","state","meterType","zip","cycle","loadProfile","customer","headers","Object","keys","filter","key","handleCheckedRow","item","find","data","__decorate","required","selector","templateUrl","styleUrls"],"sources":["/home/technoidentity/Desktop/nrg/web-component-demo/mfe-app/src/app/sites/containers/site-list/site-list.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Site } from '@/model';\n\n@Component({\n  selector: 'app-site-list',\n  templateUrl: './site-list.component.html',\n  styleUrls: ['./site-list.component.scss'],\n})\nexport class SiteListComponent {\n  @Input({ required: true }) show: boolean = false;\n  tableData: ReadonlyArray<Site> = [\n    {\n      id: 1,\n      checked: false,\n      siteId: 'Site 1',\n      pod: '12345_67890',\n      lastRead: '05/20/2024',\n      dc: 'CLP',\n      address: 'Address Line 1',\n      city: 'City 1',\n      state: 'State',\n      meterType: 'Meter Type',\n      zip: '12345',\n      cycle: 10,\n      loadProfile: 'Profile',\n      customer: 'Customer Name',\n    },\n    {\n      id: 2,\n      checked: false,\n      siteId: 'Site 1',\n      pod: '12345_67890',\n      lastRead: '05/20/2024',\n      dc: 'CLP',\n      address: 'Address Line 1',\n      city: 'City 1',\n      state: 'State',\n      meterType: 'Meter Type',\n      zip: '12345',\n      cycle: 10,\n      loadProfile: 'Profile',\n      customer: 'Customer Name',\n    },\n    {\n      id: 3,\n      checked: false,\n      siteId: 'Site 1',\n      pod: '12345_67890',\n      lastRead: '05/20/2024',\n      dc: 'CLP',\n      address: 'Address Line 1',\n      city: 'City 1',\n      state: 'State',\n      meterType: 'Meter Type',\n      zip: '12345',\n      cycle: 10,\n      loadProfile: 'Profile',\n      customer: 'Customer Name',\n    },\n  ];\n  headers = Object.keys(this.tableData[0]).filter((key) => key !== 'id');\n\n  handleCheckedRow(id: number) {\n    const item = this.tableData.find((data) => data.id === id);\n\n    if (!item) {\n      return;\n    }\n\n    this.tableData = [\n      ...this.tableData.filter((data) => data.id !== id),\n      { ...item, checked: !item.checked },\n    ];\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,eAAe;AAQzC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAAvBC,YAAA;IACsB,KAAAC,IAAI,GAAY,KAAK;IAChD,KAAAC,SAAS,GAAwB,CAC/B;MACEC,EAAE,EAAE,CAAC;MACLC,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE,QAAQ;MAChBC,GAAG,EAAE,aAAa;MAClBC,QAAQ,EAAE,YAAY;MACtBC,EAAE,EAAE,KAAK;MACTC,OAAO,EAAE,gBAAgB;MACzBC,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE,OAAO;MACdC,SAAS,EAAE,YAAY;MACvBC,GAAG,EAAE,OAAO;MACZC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,SAAS;MACtBC,QAAQ,EAAE;KACX,EACD;MACEb,EAAE,EAAE,CAAC;MACLC,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE,QAAQ;MAChBC,GAAG,EAAE,aAAa;MAClBC,QAAQ,EAAE,YAAY;MACtBC,EAAE,EAAE,KAAK;MACTC,OAAO,EAAE,gBAAgB;MACzBC,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE,OAAO;MACdC,SAAS,EAAE,YAAY;MACvBC,GAAG,EAAE,OAAO;MACZC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,SAAS;MACtBC,QAAQ,EAAE;KACX,EACD;MACEb,EAAE,EAAE,CAAC;MACLC,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE,QAAQ;MAChBC,GAAG,EAAE,aAAa;MAClBC,QAAQ,EAAE,YAAY;MACtBC,EAAE,EAAE,KAAK;MACTC,OAAO,EAAE,gBAAgB;MACzBC,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE,OAAO;MACdC,SAAS,EAAE,YAAY;MACvBC,GAAG,EAAE,OAAO;MACZC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,SAAS;MACtBC,QAAQ,EAAE;KACX,CACF;IACD,KAAAC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACjB,SAAS,CAAC,CAAC,CAAC,CAAC,CAACkB,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAK,IAAI,CAAC;EAcxE;EAZEC,gBAAgBA,CAACnB,EAAU;IACzB,MAAMoB,IAAI,GAAG,IAAI,CAACrB,SAAS,CAACsB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACtB,EAAE,KAAKA,EAAE,CAAC;IAE1D,IAAI,CAACoB,IAAI,EAAE;MACT;;IAGF,IAAI,CAACrB,SAAS,GAAG,CACf,GAAG,IAAI,CAACA,SAAS,CAACkB,MAAM,CAAEK,IAAI,IAAKA,IAAI,CAACtB,EAAE,KAAKA,EAAE,CAAC,EAClD;MAAE,GAAGoB,IAAI;MAAEnB,OAAO,EAAE,CAACmB,IAAI,CAACnB;IAAO,CAAE,CACpC;EACH;CACD;AAjE4BsB,UAAA,EAA1B5B,KAAK,CAAC;EAAE6B,QAAQ,EAAE;AAAI,CAAE,CAAC,C,8CAAuB;AADtC5B,iBAAiB,GAAA2B,UAAA,EAL7B7B,SAAS,CAAC;EACT+B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACW/B,iBAAiB,CAkE7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}